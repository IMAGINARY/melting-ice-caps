{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","each","iSlideshow","slideshow","currentSlide","find","iSlide","slide","routie","attr","trigger","window","setTimeout","exitedSlide","enteredSlide","css","marginLeft","position","left","iOption","option","on","ev","preventDefault","selected","removeClass","addClass","slideshowID","iToc","toc","tocMarker","insertBefore","slideID","target","tocItem","top","console","log"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,eCIAK,GAAE,WAiBAA,EAAE,cAAcC,KAAK,SAACC,EAAYC,GAChC,GAAIC,GAAe,IACnBJ,GAAEG,GAAWE,KAAK,mBAAmBJ,KAAK,SAACK,EAAQC,GACjDC,OAAOR,EAAEO,GAAOE,KAAK,iBAAkB,WAChB,OAAjBL,IACFJ,EAAEI,GAAcM,QAAQ,aACxBC,OAAOC,WAAW,SAACC,GACjBb,EAAEa,GAAaH,QAAQ,gBA1BN,IA2BMN,IAE3BA,EAAeG,EACfP,EAAEO,GAAOG,QAAQ,cACjBE,WAAW,SAACE,GACVd,EAAEc,GAAcJ,QAAQ,iBAhCL,IAiCIH,GACzBP,EAAEG,GAAWY,KAAMC,YAAa,EAAIhB,EAAEO,GAAOU,WAAWC,aAQ9DlB,EAAE,6BAA6BC,KAAK,SAACK,EAAQC,GAC3CP,EAAEO,GAAOF,KAAK,iBAAiBJ,KAAK,SAACkB,EAASC,GAC5CpB,EAAEoB,GAAQC,GAAG,QAAS,SAACC,GACrBA,EAAGC,gBACH,IAAMC,GAAWxB,EAAEoB,GAAQX,KAAK,cAChCT,GAAEO,GAAOF,KAAK,iBAAiBoB,YAAY,UAC3CzB,EAAEoB,GAAQM,SAAS,UACnB1B,EAAEO,GAAOF,KAAK,sBAAsBoB,YAAY,UAChDzB,EAAEO,GAAOF,KAAT,qBAAmCmB,EAAnC,KAAgDE,SAAS,cAK7D1B,EAAEO,GAAOc,GAAG,cAAe,WACzBrB,EAAEO,GAAOF,KAAK,iBAAiBoB,YAAY,UAC3CzB,EAAEO,GAAOF,KAAK,sBAAsBoB,YAAY,cAOpDzB,EAAE,cAAcC,KAAK,SAACC,EAAYC,GAChC,GAAMwB,GAAc3B,EAAEG,GAAWM,KAAK,oBACtCT,GAAA,uBAAyB2B,EAAzB,KAAyC1B,KAAK,SAAC2B,EAAMC,GACnD,GAAMC,GAAY9B,EAAE,iCACpBA,GAAE8B,GAAWC,aAAaF,GAC1B7B,EAAEG,GAAWkB,GAAG,aAAc,SAACC,GAC7B,GAAMU,GAAUhC,EAAEsB,EAAGW,QAAQxB,KAAK,iBAC5ByB,EAAUlC,EAAE6B,GAAKxB,KAAP,YAAwB2B,EAAxB,KACZE,GAAQrC,QACVG,EAAE8B,GAAWJ,SAAS,WACtB1B,EAAE8B,GAAWf,KACXG,KAAMgB,EAAQjB,WAAWC,KACzBiB,IAAKD,EAAQjB,WAAWkB,MAE1BC,QAAQC,IAAI,UAEZD,QAAQC,IAAI,UACZrC,EAAE8B,GAAWL,YAAY","file":"bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global routie */\n\nconst SlideTransitionDelay = 500;\n\n$(() => {\n  /**\n   * Installs a router that slides the slideshow to the offset based on the url hash\n   *\n   * The route handler also fires events on the slides:\n   * - slideEnter:\n   *   Fired when a new slide is selected, before the slideshow finishes transitioning to it.\n   * - slideEntered:\n   *   Fired after the slideshow finishes transitioning to the new slide.\n   * - slideExit:\n   *   Fired when a slide is being exited, before the slideshow begins transitioning away.\n   * - slideExited:\n   *   Fired when the slideshow finished transitioning away from an exited slide.\n   *\n   * NOTE: It's currently possible that a slideEnter event will be fired on a slide before the\n   * slideExited handler of the same slide finished firing. Same for slideExit / slideEntered.\n   */\n  $('.slideshow').each((iSlideshow, slideshow) => {\n    let currentSlide = null;\n    $(slideshow).find('[data-slide-id]').each((iSlide, slide) => {\n      routie($(slide).attr('data-slide-id'), () => {\n        if (currentSlide !== null) {\n          $(currentSlide).trigger('slideExit');\n          window.setTimeout((exitedSlide) => {\n            $(exitedSlide).trigger('slideExited');\n          }, SlideTransitionDelay, currentSlide);\n        }\n        currentSlide = slide;\n        $(slide).trigger('slideEnter');\n        setTimeout((enteredSlide) => {\n          $(enteredSlide).trigger('slideEntered');\n        }, SlideTransitionDelay, slide);\n        $(slideshow).css({ marginLeft: -1 * $(slide).position().left });\n      });\n    });\n  });\n\n  /**\n   * Install toggler controls\n   */\n  $('.slide:has([data-option])').each((iSlide, slide) => {\n    $(slide).find('[data-option]').each((iOption, option) => {\n      $(option).on('click', (ev) => {\n        ev.preventDefault();\n        const selected = $(option).attr('data-option');\n        $(slide).find('[data-option]').removeClass('active');\n        $(option).addClass('active');\n        $(slide).find('[data-option-show]').removeClass('active');\n        $(slide).find(`[data-option-show=${selected}]`).addClass('active');\n      });\n    });\n\n    // Reset all toggles when exiting the slide\n    $(slide).on('slideExited', () => {\n      $(slide).find('[data-option]').removeClass('active');\n      $(slide).find('[data-option-show]').removeClass('active');\n    });\n  });\n\n  /**\n   * Add a position marker in the TOC\n   */\n  $('.slideshow').each((iSlideshow, slideshow) => {\n    const slideshowID = $(slideshow).attr('data-slideshow-id');\n    $(`.toc[data-slideshow=${slideshowID}]`).each((iToc, toc) => {\n      const tocMarker = $(\"<div class='toc-marker'></div>\");\n      $(tocMarker).insertBefore(toc);\n      $(slideshow).on('slideEnter', (ev) => {\n        const slideID = $(ev.target).attr('data-slide-id');\n        const tocItem = $(toc).find(`[href*='#${slideID}']`);\n        if (tocItem.length) {\n          $(tocMarker).addClass('visible');\n          $(tocMarker).css({\n            left: tocItem.position().left,\n            top: tocItem.position().top,\n          });\n          console.log(\"YEAH\");\n        } else {\n          console.log(\"NO WHY\");\n          $(tocMarker).removeClass('visible');\n        }\n      });\n    });\n  });\n});\n"]}