{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","showOption","slide","optionID","find","removeClass","addClass","each","iSlide","once","iOption","option","on","ev","preventDefault","parents","attr","slideId","target","document","body","iSlideshow","slideshow","slideshowID","iToc","toc","tocMarker","insertBefore","slideID","tocItem","css","left","position","top","stopRequested","playing","iVideo","video","play","then","pause","currentTime","currentSlide","routie","trigger","window","setTimeout","exitedSlide","enteredSlide","marginLeft"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,eCIAK,GAAE,WAIA,QAASC,GAAWC,EAAOC,GACzBH,EAAEE,GAAOE,KAAK,iBAAiBC,YAAY,UAC3CL,EAAEE,GAAOE,KAAK,sBAAsBC,YAAY,UAChDL,EAAEE,GAAOE,KAAT,gBAA8BD,EAA9B,KAA2CG,SAAS,UACpDN,EAAEE,GAAOE,KAAT,qBAAmCD,EAAnC,KAAgDG,SAAS,UAE3DN,EAAE,6BAA6BO,KAAK,SAACC,EAAQN,GAC3C,GAAIO,IAAO,CACXT,GAAEE,GAAOE,KAAK,iBAAiBG,KAAK,SAACG,EAASC,GAC5CX,EAAEW,GAAQC,GAAG,QAAS,SAACC,GAGrB,GAFAA,EAAGC,iBAECd,EAAEW,GAAQI,QAAQ,sBAAsBlB,OAAS,EAAG,CACtD,GAAIY,EACF,MAEFA,IAAO,EAGTR,EAAWC,EAAOF,EAAEW,GAAQK,KAAK,kBAEnCf,EAAWC,EAAO,aAIpBF,EAAEE,GAAOU,GAAG,cAAe,WACzBH,GAAO,EACPR,EAAWC,EAAO,eAOtBF,EAAE,yBACCY,GAAG,aAAc,SAACC,GACjB,GAAMI,GAAUjB,EAAEa,EAAGK,QAAQF,KAAK,gBAClChB,GAAEmB,SAASC,MAAMd,SAAjB,SAAmCW,EAAnC,YAEDL,GAAG,eAAgB,SAACC,GACnB,GAAMI,GAAUjB,EAAEa,EAAGK,QAAQF,KAAK,gBAClChB,GAAEmB,SAASC,MAAMf,YAAjB,SAAsCY,EAAtC,UACAjB,EAAEmB,SAASC,MAAMd,SAAjB,SAAmCW,KAEpCL,GAAG,YAAa,SAACC,GAChB,GAAMI,GAAUjB,EAAEa,EAAGK,QAAQF,KAAK,gBAClChB,GAAEmB,SAASC,MAAMd,SAAjB,SAAmCW,EAAnC,WAEDL,GAAG,cAAe,SAACC,GAClB,GAAMI,GAAUjB,EAAEa,EAAGK,QAAQF,KAAK,gBAClChB,GAAEmB,SAASC,MAAMf,YAAjB,SAAsCY,EAAtC,SACAjB,EAAEmB,SAASC,MAAMf,YAAjB,SAAsCY,KAM1CjB,EAAE,cAAcO,KAAK,SAACc,EAAYC,GAChC,GAAMC,GAAcvB,EAAEsB,GAAWN,KAAK,oBACtChB,GAAA,uBAAyBuB,EAAzB,KAAyChB,KAAK,SAACiB,EAAMC,GACnD,GAAMC,GAAY1B,EAAE,iCACpBA,GAAE0B,GAAWC,aAAaF,GAC1BzB,EAAEsB,GAAWV,GAAG,aAAc,SAACC,GAC7B,GAAMe,GAAU5B,EAAEa,EAAGK,QAAQF,KAAK,iBAC5Ba,EAAU7B,EAAEyB,GAAKrB,KAAP,YAAwBwB,EAAxB,KACZC,GAAQhC,QACVG,EAAE0B,GAAWpB,SAAS,WACtBN,EAAE0B,GAAWI,KACXC,KAAMF,EAAQG,WAAWD,KACzBE,IAAKJ,EAAQG,WAAWC,OAG1BjC,EAAE0B,GAAWrB,YAAY,iBAUjCL,EAAE,qBAAqBO,KAAK,SAACC,EAAQN,GACnC,GAAIgC,IAAgB,EAChBC,GAAU,CAEdnC,GAAEE,GAAOU,GAAG,eAAgB,SAAC/B,GAC3BmB,EAAEnB,EAAEqC,QAAQd,KAAK,SAASG,KAAK,SAAC6B,EAAQC,GACtCA,EAAMC,OAAOC,KAAK,WACZL,GACFG,EAAMG,QACNH,EAAMI,YAAc,EACpBP,GAAgB,GAEhBC,GAAU,QAMlBnC,EAAEE,GAAOU,GAAG,cAAe,SAAC/B,GAC1BmB,EAAEnB,EAAEqC,QAAQd,KAAK,SAASG,KAAK,SAAC6B,EAAQC,GAClCF,GACFE,EAAMG,QACNH,EAAMI,YAAc,EACpBN,GAAU,GAEVD,GAAgB,QAsBxBlC,EAAE,cAAcO,KAAK,SAACc,EAAYC,GAChC,GAAIoB,GAAe,IACnB1C,GAAEsB,GAAWlB,KAAK,mBAAmBG,KAAK,SAACC,EAAQN,GACjDyC,OAAO3C,EAAEE,GAAOc,KAAK,iBAAkB,WAChB,OAAjB0B,IACF1C,EAAE0C,GAAcE,QAAQ,aACxBC,OAAOC,WAAW,SAACC,GACjB/C,EAAE+C,GAAaH,QAAQ,gBA9IN,IA+IMF,IAE3BA,EAAexC,EACfF,EAAEE,GAAO0C,QAAQ,cACjBE,WAAW,SAACE,GACVhD,EAAEgD,GAAcJ,QAAQ,iBApJL,IAqJI1C,GACzBF,EAAEsB,GAAWQ,KAAMmB,YAAa,EAAIjD,EAAEE,GAAO8B,WAAWD","file":"bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global routie */\n\nconst SlideTransitionDelay = 500;\n\n$(() => {\n  /**\n   * Install toggler controls\n   */\n  function showOption(slide, optionID) {\n    $(slide).find('[data-option]').removeClass('active');\n    $(slide).find('[data-option-show]').removeClass('active');\n    $(slide).find(`[data-option=${optionID}]`).addClass('active');\n    $(slide).find(`[data-option-show=${optionID}]`).addClass('active');\n  }\n  $('.slide:has([data-option])').each((iSlide, slide) => {\n    let once = false;\n    $(slide).find('[data-option]').each((iOption, option) => {\n      $(option).on('click', (ev) => {\n        ev.preventDefault();\n\n        if ($(option).parents('[data-option-once]').length > 0) {\n          if (once) {\n            return;\n          }\n          once = true;\n        }\n\n        showOption(slide, $(option).attr('data-option'));\n      });\n      showOption(slide, 'default');\n    });\n\n    // Reset all toggles when exiting the slide\n    $(slide).on('slideExited', () => {\n      once = false;\n      showOption(slide, 'default');\n    });\n  });\n\n  /**\n   * Set body classes\n   */\n  $('.slide[data-slide-id]')\n    .on('slideEnter', (ev) => {\n      const slideId = $(ev.target).attr('data-slide-id');\n      $(document.body).addClass(`slide-${slideId}-enter`);\n    })\n    .on('slideEntered', (ev) => {\n      const slideId = $(ev.target).attr('data-slide-id');\n      $(document.body).removeClass(`slide-${slideId}-enter`);\n      $(document.body).addClass(`slide-${slideId}`);\n    })\n    .on('slideExit', (ev) => {\n      const slideId = $(ev.target).attr('data-slide-id');\n      $(document.body).addClass(`slide-${slideId}-exit`);\n    })\n    .on('slideExited', (ev) => {\n      const slideId = $(ev.target).attr('data-slide-id');\n      $(document.body).removeClass(`slide-${slideId}-exit`);\n      $(document.body).removeClass(`slide-${slideId}`);\n    });\n\n  /**\n   * Add a position marker in the TOC\n   */\n  $('.slideshow').each((iSlideshow, slideshow) => {\n    const slideshowID = $(slideshow).attr('data-slideshow-id');\n    $(`.toc[data-slideshow=${slideshowID}]`).each((iToc, toc) => {\n      const tocMarker = $(\"<div class='toc-marker'></div>\");\n      $(tocMarker).insertBefore(toc);\n      $(slideshow).on('slideEnter', (ev) => {\n        const slideID = $(ev.target).attr('data-slide-id');\n        const tocItem = $(toc).find(`[href*='#${slideID}']`);\n        if (tocItem.length) {\n          $(tocMarker).addClass('visible');\n          $(tocMarker).css({\n            left: tocItem.position().left,\n            top: tocItem.position().top,\n          });\n        } else {\n          $(tocMarker).removeClass('visible');\n        }\n      });\n    });\n  });\n\n  /**\n   * Autoplay / Autostop videos\n   */\n\n  $('.slide:has(video)').each((iSlide, slide) => {\n    let stopRequested = false;\n    let playing = false;\n\n    $(slide).on('slideEntered', (e) => {\n      $(e.target).find('video').each((iVideo, video) => {\n        video.play().then(() => {\n          if (stopRequested) {\n            video.pause();\n            video.currentTime = 0; // eslint-disable-line\n            stopRequested = false;\n          } else {\n            playing = true;\n          }\n        });\n      });\n    });\n\n    $(slide).on('slideExited', (e) => {\n      $(e.target).find('video').each((iVideo, video) => {\n        if (playing) {\n          video.pause();\n          video.currentTime = 0; // eslint-disable-line\n          playing = false;\n        } else {\n          stopRequested = true;\n        }\n      });\n    });\n  });\n\n  /**\n   * Installs a router that slides the slideshow to the offset based on the url hash\n   *\n   * The route handler also fires events on the slides:\n   * - slideEnter:\n   *   Fired when a new slide is selected, before the slideshow finishes transitioning to it.\n   * - slideEntered:\n   *   Fired after the slideshow finishes transitioning to the new slide.\n   * - slideExit:\n   *   Fired when a slide is being exited, before the slideshow begins transitioning away.\n   * - slideExited:\n   *   Fired when the slideshow finished transitioning away from an exited slide.\n   *\n   * NOTE: It's currently possible that a slideEnter event will be fired on a slide before the\n   * slideExited handler of the same slide finished firing. Same for slideExit / slideEntered.\n   */\n  $('.slideshow').each((iSlideshow, slideshow) => {\n    let currentSlide = null;\n    $(slideshow).find('[data-slide-id]').each((iSlide, slide) => {\n      routie($(slide).attr('data-slide-id'), () => {\n        if (currentSlide !== null) {\n          $(currentSlide).trigger('slideExit');\n          window.setTimeout((exitedSlide) => {\n            $(exitedSlide).trigger('slideExited');\n          }, SlideTransitionDelay, currentSlide);\n        }\n        currentSlide = slide;\n        $(slide).trigger('slideEnter');\n        setTimeout((enteredSlide) => {\n          $(enteredSlide).trigger('slideEntered');\n        }, SlideTransitionDelay, slide);\n        $(slideshow).css({ marginLeft: -1 * $(slide).position().left });\n      });\n    });\n  });\n});\n"]}